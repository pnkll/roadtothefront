{"ast":null,"code":"var _jsxFileName = \"/home/painkill/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/socialNetwork/roadtothefront/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'; // import DialogsContainer from './components/Dialogs/DialogsContainer';\n// import { addPost, updatePostText, addMessage, updateMessageText, subscribe } from './redux/store'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet rerenderEntireTree = state => {\n  console.log('state обновлен');\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n        children: /*#__PURE__*/_jsxDEV(App, {\n          store: store,\n          state: state,\n          dispatch: store.dispatch.bind(store)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this), document.getElementById('root'));\n};\n\nrerenderEntireTree(store.getState()); // store.subscribe(()=>{\n//     let state = store.getState();\n//     rerenderEntireTree(state)\n// })\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/home/painkill/Рабочий стол/projects/socialNetwork/roadtothefront/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","store","BrowserRouter","Provider","rerenderEntireTree","state","console","log","render","dispatch","bind","document","getElementById","getState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;AACA;;;;AAMA,IAAIC,kBAAkB,GAAIC,KAAD,IAAW;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAT,EAAAA,QAAQ,CAACU,MAAT,eAEI,QAAC,KAAD,CAAO,UAAP;AAAA,2BAAkB,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEP,KAAjB;AAAA,6BAEd,QAAC,aAAD;AAAA,+BAAe,QAAC,GAAD;AAAK,UAAA,KAAK,EAAEA,KAAZ;AAAmB,UAAA,KAAK,EAAEI,KAA1B;AAAiC,UAAA,QAAQ,EAAEJ,KAAK,CAACQ,QAAN,CAAeC,IAAf,CAAoBT,KAApB;AAA3C;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;AAAA;AAAA;AAAA;AAFc;AAAA;AAAA;AAAA;AAAA;AAAlB;AAAA;AAAA;AAAA;AAAA,UAFJ,EAOIU,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAPJ;AAUH,CAZD;;AAcAR,kBAAkB,CAACH,KAAK,CAACY,QAAN,EAAD,CAAlB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACAb,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\n// import { addPost, updatePostText, addMessage, updateMessageText, subscribe } from './redux/store'\n\n\n\n\n\nlet rerenderEntireTree = (state) => {\n    console.log('state обновлен')\n    ReactDOM.render(\n\n        <React.StrictMode><Provider store={store}>\n\n            <BrowserRouter><App store={store} state={state} dispatch={store.dispatch.bind(store)} /></BrowserRouter>\n        </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n    \n}\n\nrerenderEntireTree(store.getState());\n\n// store.subscribe(()=>{\n//     let state = store.getState();\n//     rerenderEntireTree(state)\n// })\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n"]},"metadata":{},"sourceType":"module"}