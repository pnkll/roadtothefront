{"ast":null,"code":"import { getAuth } from \"../components/api/api\";\nconst SET_USER_DATA = 'SET-USER-DATA';\nconst initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET-USER-DATA':\n      return { ...state,\n        ...action.data,\n        isAuth: true\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport const setUserData = (userId, login, email) => {\n  return {\n    type: SET_USER_DATA,\n    data: {\n      userId,\n      login,\n      email\n    }\n  };\n};\nexport const checkAuth = () => dispatch => {\n  getAuth().then(response => {\n    const login = response.data.data.login;\n    const email = response.data.data.email;\n    const userId = response.data.data.id;\n    const result = response.data.resultCode;\n\n    if (result === 0) {\n      dispatch(setUserData(userId, login, email));\n    }\n  });\n};\nexport default authReducer;","map":{"version":3,"sources":["/home/pnkll/Documents/pp/roadtothefront/src/redux/authReducer.js"],"names":["getAuth","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","data","setUserData","checkAuth","dispatch","then","response","id","result","resultCode"],"mappings":"AAAA,SAASA,OAAT,QAAwB,uBAAxB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,IADS;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,MAAM,EAAE;AAJS,CAArB;;AAOA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACA,aAAO,EACH,GAAGF,KADA;AAEH,WAAGC,MAAM,CAACE,IAFP;AAGHL,QAAAA,MAAM,EAAE;AAHL,OAAP;;AAKA;AAAS;AACL,eAAOE,KAAP;AAEH;AAVL;AAYH,CAbD;;AAeA,OAAO,MAAMI,WAAW,GAAG,CAACT,MAAD,EAASE,KAAT,EAAgBD,KAAhB,KAA0B;AACjD,SAAO;AAAEM,IAAAA,IAAI,EAAET,aAAR;AAAuBU,IAAAA,IAAI,EAAE;AAACR,MAAAA,MAAD;AAASE,MAAAA,KAAT;AAAgBD,MAAAA;AAAhB;AAA7B,GAAP;AACH,CAFM;AAIP,OAAO,MAAMS,SAAS,GAAG,MAAOC,QAAD,IAAc;AACzCd,EAAAA,OAAO,GACJe,IADH,CACQC,QAAQ,IAAI;AAChB,UAAMX,KAAK,GAAGW,QAAQ,CAACL,IAAT,CAAcA,IAAd,CAAmBN,KAAjC;AACA,UAAMD,KAAK,GAAGY,QAAQ,CAACL,IAAT,CAAcA,IAAd,CAAmBP,KAAjC;AACA,UAAMD,MAAM,GAAGa,QAAQ,CAACL,IAAT,CAAcA,IAAd,CAAmBM,EAAlC;AACA,UAAMC,MAAM,GAAGF,QAAQ,CAACL,IAAT,CAAcQ,UAA7B;;AACA,QAAKD,MAAM,KAAK,CAAhB,EAAkB;AAClBJ,MAAAA,QAAQ,CAACF,WAAW,CAACT,MAAD,EAASE,KAAT,EAAgBD,KAAhB,CAAZ,CAAR;AACC;AACF,GATH;AAUH,CAXM;AAaP,eAAeG,WAAf","sourcesContent":["import { getAuth } from \"../components/api/api\"\n\nconst SET_USER_DATA = 'SET-USER-DATA'\n\nconst initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET-USER-DATA' : \n        return {\n            ...state,\n            ...action.data,\n            isAuth: true\n        }\n        default: {\n            return state;\n\n        }\n    }\n}\n\nexport const setUserData = (userId, login, email) => {\n    return { type: SET_USER_DATA, data: {userId, login, email}}\n}\n\nexport const checkAuth = () => (dispatch) => {\n    getAuth()\n      .then(response => {\n        const login = response.data.data.login\n        const email = response.data.data.email\n        const userId = response.data.data.id\n        const result = response.data.resultCode\n        if ( result === 0){\n        dispatch(setUserData(userId, login, email))\n        }\n      })\n}\n\nexport default authReducer"]},"metadata":{},"sourceType":"module"}