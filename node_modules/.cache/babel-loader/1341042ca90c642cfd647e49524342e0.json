{"ast":null,"code":"var _jsxFileName = \"/home/pnkll/Documents/pp/roadtothefront/src/components/Dialogs/Dialogs.jsx\";\nimport classes from './Dialogs.module.css';\nimport Message from './Message/Message';\nimport DialogItem from './DialogItem/DialogItem';\nimport React from 'react';\nimport { addMessageActionCreator, updateMessageActionCreator } from '../../redux/dialogsReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dialogs = props => {\n  let onAddMessage = () => {\n    props.addMess();\n  };\n\n  let onUpdateMessage = elem => {\n    let newText = elem.target.value;\n    props.updateMess(newText);\n  };\n\n  let messagesElems = props.messages.map(m => {\n    if (m.userid == 'me') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.myMessage,\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          avatar: m.image,\n          text: m.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 64\n        }, this)\n      }, m.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.message,\n        children: /*#__PURE__*/_jsxDEV(Message, {\n          avatar: m.image,\n          text: m.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 62\n        }, this)\n      }, m.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    }\n  });\n  var dialogsElems = props.dialogs.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    avatar: d.image,\n    id: d.id,\n    name: d.name,\n    path: '/dialogs/' + d.id\n  }, d.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 29\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dialogsItems,\n      children: dialogsElems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), messagesElems, /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: props.dialogsPage.newMessageValue,\n        onChange: onUpdateMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onAddMessage,\n        children: \"Add message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["/home/pnkll/Documents/pp/roadtothefront/src/components/Dialogs/Dialogs.jsx"],"names":["classes","Message","DialogItem","React","addMessageActionCreator","updateMessageActionCreator","Dialogs","props","onAddMessage","addMess","onUpdateMessage","elem","newText","target","value","updateMess","messagesElems","messages","map","m","userid","myMessage","image","message","key","dialogsElems","dialogs","d","id","name","dialogsItems","dialogsPage","newMessageValue"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,EAAkCC,0BAAlC,QAAoE,4BAApE;;;AAIA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEzB,MAAIC,YAAY,GAAG,MAAM;AACvBD,IAAAA,KAAK,CAACE,OAAN;AACD,GAFD;;AAKA,MAAIC,eAAe,GAAIC,IAAD,IAAS;AAC7B,QAAIC,OAAO,GAAGD,IAAI,CAACE,MAAL,CAAYC,KAA1B;AACAP,IAAAA,KAAK,CAACQ,UAAN,CAAiBH,OAAjB;AACD,GAHD;;AAKA,MAAII,aAAa,GACfT,KAAK,CAACU,QAAN,CAAeC,GAAf,CAAmBC,CAAC,IAAI;AACtB,QAAIA,CAAC,CAACC,MAAF,IAAY,IAAhB,EAAsB;AACpB,0BAAQ;AAAiB,QAAA,SAAS,EAAEpB,OAAO,CAACqB,SAApC;AAAA,+BAA+C,QAAC,OAAD;AAAS,UAAA,MAAM,EAAEF,CAAC,CAACG,KAAnB;AAA0B,UAAA,IAAI,EAAEH,CAAC,CAACI;AAAlC;AAAA;AAAA;AAAA;AAAA;AAA/C,SAAUJ,CAAC,CAACK,GAAZ;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KAFD,MAGK;AACH,0BAAQ;AAAiB,QAAA,SAAS,EAAExB,OAAO,CAACuB,OAApC;AAAA,+BAA6C,QAAC,OAAD;AAAS,UAAA,MAAM,EAAEJ,CAAC,CAACG,KAAnB;AAA0B,UAAA,IAAI,EAAEH,CAAC,CAACI;AAAlC;AAAA;AAAA;AAAA;AAAA;AAA7C,SAAUJ,CAAC,CAACK,GAAZ;AAAA;AAAA;AAAA;AAAA,cAAR;AACD;AACF,GAPD,CADF;AAUA,MAAIC,YAAY,GACdlB,KAAK,CAACmB,OAAN,CAAcR,GAAd,CAAkBS,CAAC,iBAAK,QAAC,UAAD;AAAuB,IAAA,MAAM,EAAEA,CAAC,CAACL,KAAjC;AAAwC,IAAA,EAAE,EAAEK,CAAC,CAACC,EAA9C;AAAkD,IAAA,IAAI,EAAED,CAAC,CAACE,IAA1D;AAAgE,IAAA,IAAI,EAAE,cAAcF,CAAC,CAACC;AAAtF,KAAiBD,CAAC,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,UAAxB,CADF;AAIE,sBACE;AAAK,IAAA,SAAS,EAAE5B,OAAO,CAAC0B,OAAxB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAE1B,OAAO,CAAC8B,YAAxB;AAAA,gBACGL;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAEzB,OAAO,CAACiB,QAAxB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGD,aAFH,eAGE;AAAU,QAAA,KAAK,EAAET,KAAK,CAACwB,WAAN,CAAkBC,eAAnC;AAAoD,QAAA,QAAQ,EAAEtB;AAA9D;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAEF,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcH,CAxCD;;KAAMF,O;AA0CN,eAAeA,OAAf","sourcesContent":["import classes from './Dialogs.module.css'\nimport Message from './Message/Message'\nimport DialogItem from './DialogItem/DialogItem';\nimport React from 'react';\nimport { addMessageActionCreator, updateMessageActionCreator } from '../../redux/dialogsReducer'\n\n\n\nconst Dialogs = (props) => {\n\n  let onAddMessage = () => {\n    props.addMess()\n  }\n\n\n  let onUpdateMessage = (elem) =>{\n    let newText = elem.target.value\n    props.updateMess(newText)\n  }\n\n  let messagesElems =\n    props.messages.map(m => {\n      if (m.userid == 'me') {\n        return (<div key={m.key} className={classes.myMessage}><Message avatar={m.image} text={m.message} /></div>)\n      }\n      else {\n        return (<div key={m.key} className={classes.message}><Message avatar={m.image} text={m.message} /></div>)\n      }\n    })\n\n  var dialogsElems =\n    props.dialogs.map(d => (<DialogItem key={d.id} avatar={d.image} id={d.id} name={d.name} path={'/dialogs/' + d.id} />))\n\n\n    return (\n      <div className={classes.dialogs}>\n        <div className={classes.dialogsItems}>\n          {dialogsElems}\n        </div>\n        <div className={classes.messages}>\n          <div>Name</div>\n          {messagesElems}\n          <textarea value={props.dialogsPage.newMessageValue} onChange={onUpdateMessage}></textarea>\n          <button onClick={onAddMessage}>Add message</button>\n        </div>\n      </div>\n  \n    )\n}\n\nexport default Dialogs"]},"metadata":{},"sourceType":"module"}