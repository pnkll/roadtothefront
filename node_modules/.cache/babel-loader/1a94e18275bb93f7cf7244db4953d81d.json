{"ast":null,"code":"var _jsxFileName = \"/home/painkill/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/socialNetwork/roadtothefront/src/components/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useFormik } from 'formik';\nimport { authThunk } from \"../../redux/async/authThunk\";\nimport { useForm } from 'react-hook-form';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  var _errors$email;\n\n  const {\n    register,\n    formState: {\n      errors\n    },\n    handleSubmit,\n    reset\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"E-mail:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          ...register('email', {\n            required: 'Поле обязательное к заполнению',\n            minLength: {\n              value: 5,\n              message: 'Минимум 5 символов'\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: (errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message) || 'Общая ошибка'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"GNa5K/sHLbAHOtOkQc5jNj4Qz5w=\", false, function () {\n  return [useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/painkill/Рабочий стол/projects/socialNetwork/roadtothefront/src/components/Login/Login.jsx"],"names":["React","useDispatch","useFormik","authThunk","useForm","Yup","Login","props","register","formState","errors","handleSubmit","reset","onSubmit","data","console","log","required","minLength","value","message","email"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AAErB,QAAM;AACFC,IAAAA,QADE;AAEFC,IAAAA,SAAS,EAAE;AACPC,MAAAA;AADO,KAFT;AAKFC,IAAAA,YALE;AAMFC,IAAAA;AANE,MAOFR,OAAO,EAPX;;AASA,QAAMS,QAAQ,GAAIC,IAAD,IAAU;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAF,IAAAA,KAAK;AACR,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAED,YAAY,CAACE,QAAD,CAA5B;AAAA,8BACI;AAAA,2CACI;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAA,aAAwBL,QAAQ,CAAC,OAAD,EAChC;AAACS,YAAAA,QAAQ,EAAE,gCAAX;AACAC,YAAAA,SAAS,EAAE;AAAEC,cAAAA,KAAK,EAAE,CAAT;AAAYC,cAAAA,OAAO,EAAE;AAArB;AADX,WADgC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAMK,CAAAV,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEW,KAAR,kBAAiB;AAAA,kBAAM,CAAAX,MAAM,SAAN,IAAAA,MAAM,WAAN,6BAAAA,MAAM,CAAEW,KAAR,gEAAeD,OAAf,KAA0B;AAAhC;AAAA;AAAA;AAAA;AAAA,cANtB,eAOI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAcH,CA9BD;;GAAMd,K;UASEF,O;;;KATFE,K;AAgCN,eAAeA,KAAf","sourcesContent":["import React from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { useFormik } from 'formik'\nimport { authThunk } from \"../../redux/async/authThunk\"\nimport { useForm } from 'react-hook-form'\nimport * as Yup from 'yup'\n\nconst Login = (props) => {\n\n    const {\n        register,\n        formState: {\n            errors\n        },\n        handleSubmit,\n        reset\n    } = useForm()\n\n    const onSubmit = (data) => {\n        console.log(data)\n        reset()\n    }\n\n    return (\n        <>\n            <h1>Login</h1>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <label>E-mail:\n                    <input type='email' {...register('email', \n                    {required: 'Поле обязательное к заполнению',\n                    minLength: { value: 5, message: 'Минимум 5 символов'}})} />\n                </label>\n                {errors?.email && <div>{errors?.email?.message || 'Общая ошибка'}</div>}\n                <input type='submit' />\n            </form>\n        </>\n    )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}