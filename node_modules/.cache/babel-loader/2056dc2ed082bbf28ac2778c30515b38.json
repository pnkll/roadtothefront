{"ast":null,"code":"var _jsxFileName = \"/home/painkill/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/socialNetwork/roadtothefront/src/components/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useFormik } from 'formik';\nimport { loginThunk } from \"../../redux/async/authThunk\";\nimport { useForm } from 'react-hook-form';\nimport { useEffect } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport * as Yup from 'yup';\nimport classes from './Login.module.css';\nimport Profile from \"../Profile/Profile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    register,\n    formState: {\n      errors,\n      isValid\n    },\n    handleSubmit,\n    reset //очистка формы после отправки данных\n\n  } = useForm({\n    mode: 'onBlur'\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n    dispatch(loginThunk(data));\n    reset();\n  }; // useEffect(() => {\n  //     console.log(props.state.auth.isAuth)\n  //     console.log(props.state.auth.userId)\n  //     if (props.state.auth.isAuth = true && props.state.auth.userId != null) {\n  //         console.log('sds')\n  //         navigate(`/profile/${props.state.auth.userId}`)\n  //     }\n  // }, [])\n  // if (!props.state.auth.isAuth) {\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.state.auth.isAuth === true ? navigate('../profile/21663') : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"E-mail:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            ...register('email', {\n              required: 'Поле обязательное к заполнению',\n              minLength: {\n                value: 5,\n                message: 'Минимум 5 символов'\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.error,\n            children: (errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message) || 'Общая ошибка'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"password:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            ...register('password', {\n              required: 'Заполните поле пароля',\n              minLength: {\n                value: 6,\n                message: 'Длина пароля минимум 6 символов'\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), (errors === null || errors === void 0 ? void 0 : errors.password) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.error,\n            children: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          ...register('rememberMe')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 27\n        }, this), \"Remember me?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          disabled: !isValid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }, this)\n  }, void 0, false);\n}; // else {\n//     navigate(`../profile/${props.state.auth.userId}`)\n//     return <Profile profilePage={props.state.profilePage}/>\n// }\n// }\n\n\n_s(Login, \"LD9bvTog+ojMDJCxOExW7g7QjPs=\", false, function () {\n  return [useDispatch, useNavigate, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/painkill/Рабочий стол/projects/socialNetwork/roadtothefront/src/components/Login/Login.jsx"],"names":["React","useDispatch","useFormik","loginThunk","useForm","useEffect","NavLink","useNavigate","Yup","classes","Profile","Login","props","dispatch","navigate","register","formState","errors","isValid","handleSubmit","reset","mode","onSubmit","data","console","log","state","auth","isAuth","required","minLength","value","message","email","error","password"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { useFormik } from 'formik'\nimport { loginThunk } from \"../../redux/async/authThunk\"\nimport { useForm } from 'react-hook-form'\nimport { useEffect } from \"react\"\nimport { NavLink, useNavigate } from \"react-router-dom\"\nimport * as Yup from 'yup'\nimport classes from './Login.module.css'\nimport Profile from \"../Profile/Profile\"\n\nconst Login = (props) => {\n\n    const dispatch = useDispatch()\n\n    const navigate = useNavigate()\n\n    const {\n        register,\n        formState: {\n            errors,\n            isValid\n        },\n        handleSubmit,\n        reset //очистка формы после отправки данных\n    } = useForm({ mode: 'onBlur' })\n\n    const onSubmit = (data) => {\n        console.log(data)\n        dispatch(loginThunk(data))\n        reset()\n    }\n\n    // useEffect(() => {\n    //     console.log(props.state.auth.isAuth)\n    //     console.log(props.state.auth.userId)\n    //     if (props.state.auth.isAuth = true && props.state.auth.userId != null) {\n    //         console.log('sds')\n    //         navigate(`/profile/${props.state.auth.userId}`)\n    //     }\n    // }, [])\n\n    // if (!props.state.auth.isAuth) {\n\n    return (<>\n        {props.state.auth.isAuth === true\n            ? navigate('../profile/21663')\n            : <div><h1>Login</h1>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <label>E-mail:<br />\n                        <input type='email' {...register('email',\n                            {\n                                required: 'Поле обязательное к заполнению',\n                                minLength: { value: 5, message: 'Минимум 5 символов' }\n                            })} />\n                        {errors?.email && <div className={classes.error}>{errors?.email?.message || 'Общая ошибка'}</div>}\n                    </label><br />\n                    <label>password:<br />\n                        <input type='password' {...register('password',\n                            {\n                                required: 'Заполните поле пароля',\n                                minLength: { value: 6, message: 'Длина пароля минимум 6 символов' }\n                            })} />\n                        {errors?.password && <div className={classes.error}>{errors?.password?.message}</div>}\n                    </label>\n                    <br /><input type='checkbox' {...register('rememberMe')} />Remember me?\n\n                    <br /><input type='submit' disabled={!isValid} />\n                </form></div>}\n        {/* <h1>Login</h1>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <label>E-mail:<br />\n                        <input type='email' {...register('email',\n                            {\n                                required: 'Поле обязательное к заполнению',\n                                minLength: { value: 5, message: 'Минимум 5 символов' }\n                            })} />\n                        {errors?.email && <div className={classes.error}>{errors?.email?.message || 'Общая ошибка'}</div>}\n                    </label><br />\n                    <label>password:<br />\n                        <input type='password' {...register('password',\n                            {\n                                required: 'Заполните поле пароля',\n                                minLength: { value: 6, message: 'Длина пароля минимум 6 символов' }\n                            })} />\n                        {errors?.password && <div className={classes.error}>{errors?.password?.message}</div>}\n                    </label>\n                    <br /><input type='checkbox' {...register('rememberMe')} />Remember me?\n\n                    <br /><input type='submit' disabled={!isValid} />\n                </form> */}\n    </>\n    )\n}\n\n// else {\n//     navigate(`../profile/${props.state.auth.userId}`)\n\n//     return <Profile profilePage={props.state.profilePage}/>\n// }\n// }\n\nexport default Login"]},"metadata":{},"sourceType":"module"}