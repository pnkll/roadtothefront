{"ast":null,"code":"import { getAuth } from \"../../components/api/api\";\nimport { setUserData } from \"../authReducer\";\nexport const checkAuth = () => dispatch => {\n  getAuth().then(response => {\n    const login = response.data.data.login;\n    const email = response.data.data.email;\n    const userId = response.data.data.id;\n    const result = response.data.resultCode;\n\n    if (result === 0) {\n      dispatch(setUserData(userId, login, email));\n    }\n  });\n};\nexport const auth = data => dispatch => {\n  auth(data).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setUserData(data.userId));\n    }\n  });\n};","map":{"version":3,"sources":["/home/painkill/Рабочий стол/projects/socialNetwork/roadtothefront/src/redux/async/authThunk.js"],"names":["getAuth","setUserData","checkAuth","dispatch","then","response","login","data","email","userId","id","result","resultCode","auth"],"mappings":"AAAA,SAASA,OAAT,QAAwB,0BAAxB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAOC,QAAD,IAAc;AACzCH,EAAAA,OAAO,GACJI,IADH,CACQC,QAAQ,IAAI;AAChB,UAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBD,KAAjC;AACA,UAAME,KAAK,GAAGH,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBC,KAAjC;AACA,UAAMC,MAAM,GAAGJ,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBG,EAAlC;AACA,UAAMC,MAAM,GAAGN,QAAQ,CAACE,IAAT,CAAcK,UAA7B;;AACA,QAAKD,MAAM,KAAK,CAAhB,EAAkB;AAClBR,MAAAA,QAAQ,CAACF,WAAW,CAACQ,MAAD,EAASH,KAAT,EAAgBE,KAAhB,CAAZ,CAAR;AACC;AACF,GATH;AAUH,CAXM;AAaP,OAAO,MAAMK,IAAI,GAAIN,IAAD,IAAWJ,QAAD,IAAc;AAC1CU,EAAAA,IAAI,CAACN,IAAD,CAAJ,CACCH,IADD,CACMC,QAAQ,IAAI;AAChB,QAAIA,QAAQ,CAACE,IAAT,CAAcK,UAAd,KAA6B,CAAjC,EAAoC;AAClCT,MAAAA,QAAQ,CAACF,WAAW,CAACM,IAAI,CAACE,MAAN,CAAZ,CAAR;AACD;AACF,GALD;AAMD,CAPM","sourcesContent":["import { getAuth } from \"../../components/api/api\"\nimport { setUserData } from \"../authReducer\"\n\nexport const checkAuth = () => (dispatch) => {\n    getAuth()\n      .then(response => {\n        const login = response.data.data.login\n        const email = response.data.data.email\n        const userId = response.data.data.id\n        const result = response.data.resultCode\n        if ( result === 0){\n        dispatch(setUserData(userId, login, email))\n        }\n      })\n}\n\nexport const auth = (data) => (dispatch) => {\n  auth(data)\n  .then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setUserData(data.userId))\n    }\n  })\n}"]},"metadata":{},"sourceType":"module"}