{"ast":null,"code":"import { getUsers } from \"../../components/api/api\";\nimport { toogleIsFetching, setUsers, setPage } from \"../usersReducer\";\nexport const getUsersThunk = (currentPage, pageSize) => dispatch => {\n  toogleIsFetching(true);\n  getUsers(currentPage, pageSize).then(response => {\n    dispatch(setUsers(response.data.items));\n    dispatch(toogleIsFetching(false));\n  });\n};\nexport const onSetPageThunk = (pageNum, pageSize) => dispatch => {\n  dispatch(setPage(pageNum));\n  dispatch(toogleIsFetching(true));\n  getUsers(pageNum, pageSize).then(response => {\n    dispatch(setUsers(response.data.items));\n    dispatch(toogleIsFetching(false));\n  });\n};","map":{"version":3,"sources":["/home/pnkll/Documents/pp/roadtothefront/src/redux/async/usersThunk.js"],"names":["getUsers","toogleIsFetching","setUsers","setPage","getUsersThunk","currentPage","pageSize","dispatch","then","response","data","items","onSetPageThunk","pageNum"],"mappings":"AAAA,SAASA,QAAT,QAAyB,0BAAzB;AACA,SAASC,gBAAT,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,iBAApD;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,WAAD,EAAcC,QAAd,KAA4BC,QAAD,IAAc;AAClEN,EAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACQD,EAAAA,QAAQ,CAACK,WAAD,EAAcC,QAAd,CAAR,CACKE,IADL,CACUC,QAAQ,IAAI;AACdF,IAAAA,QAAQ,CAACL,QAAQ,CAACO,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAT,CAAR;AACAJ,IAAAA,QAAQ,CAACN,gBAAgB,CAAC,KAAD,CAAjB,CAAR;AACH,GAJL;AAKX,CAPM;AASP,OAAO,MAAMW,cAAc,GAAG,CAACC,OAAD,EAAUP,QAAV,KAAwBC,QAAD,IAAc;AAC/DA,EAAAA,QAAQ,CAACJ,OAAO,CAACU,OAAD,CAAR,CAAR;AACIN,EAAAA,QAAQ,CAACN,gBAAgB,CAAC,IAAD,CAAjB,CAAR;AACAD,EAAAA,QAAQ,CAACa,OAAD,EAAUP,QAAV,CAAR,CACKE,IADL,CACUC,QAAQ,IAAI;AACdF,IAAAA,QAAQ,CAACL,QAAQ,CAACO,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAT,CAAR;AACAJ,IAAAA,QAAQ,CAACN,gBAAgB,CAAC,KAAD,CAAjB,CAAR;AACH,GAJL;AAKP,CARM","sourcesContent":["import { getUsers } from \"../../components/api/api\";\nimport { toogleIsFetching, setUsers, setPage } from \"../usersReducer\";\n\nexport const getUsersThunk = (currentPage, pageSize) => (dispatch) => {\n    toogleIsFetching(true);\n            getUsers(currentPage, pageSize)\n                .then(response => {\n                    dispatch(setUsers(response.data.items))\n                    dispatch(toogleIsFetching(false))\n                })\n}\n\nexport const onSetPageThunk = (pageNum, pageSize) => (dispatch) => {\n    dispatch(setPage(pageNum))\n        dispatch(toogleIsFetching(true))\n        getUsers(pageNum, pageSize)\n            .then(response => {\n                dispatch(setUsers(response.data.items))\n                dispatch(toogleIsFetching(false))\n            })\n}"]},"metadata":{},"sourceType":"module"}