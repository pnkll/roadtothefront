{"ast":null,"code":"const SET_USER_DATA = 'SET-USER-DATA';\nconst AUTH_ERROR = 'AUTH-ERROR';\nconst initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  errors: null\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET-USER-DATA':\n      return { ...state,\n        ...action.data\n      };\n\n    case 'AUTH-ERROR':\n      return { ...state,\n        errors: action.message\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport const setUserData = (userId, login, email, isAuth) => {\n  return {\n    type: SET_USER_DATA,\n    data: {\n      userId,\n      login,\n      email,\n      isAuth\n    }\n  };\n};\nexport const authError = message => {\n  return {\n    type: AUTH_ERROR,\n    message\n  };\n}; // export const loginUser = () => {\n//     return { type: LOGIN_USER}\n// }\n\nexport default authReducer;","map":{"version":3,"sources":["/home/painkill/Рабочий стол/projects/socialNetwork/roadtothefront/src/redux/authReducer.js"],"names":["SET_USER_DATA","AUTH_ERROR","initialState","userId","email","login","isAuth","errors","authReducer","state","action","type","data","message","setUserData","authError"],"mappings":"AAAA,MAAMA,aAAa,GAAG,eAAtB;AACA,MAAMC,UAAU,GAAG,YAAnB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,IADS;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,KAAK,EAAE,IAHU;AAIjBC,EAAAA,MAAM,EAAE,KAJS;AAKjBC,EAAAA,MAAM,EAAE;AALS,CAArB;;AAQA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEH,WAAGC,MAAM,CAACE;AAFP,OAAP;;AAIA,SAAK,YAAL;AACI,aAAM,EACF,GAAGH,KADD;AAEFF,QAAAA,MAAM,EAAEG,MAAM,CAACG;AAFb,OAAN;;AAIR;AAAS;AACL,eAAOJ,KAAP;AAEH;AAdL;AAgBH,CAjBD;;AAmBA,OAAO,MAAMK,WAAW,GAAG,CAACX,MAAD,EAASE,KAAT,EAAgBD,KAAhB,EAAuBE,MAAvB,KAAkC;AACzD,SAAO;AAAEK,IAAAA,IAAI,EAAEX,aAAR;AAAuBY,IAAAA,IAAI,EAAE;AAAET,MAAAA,MAAF;AAAUE,MAAAA,KAAV;AAAiBD,MAAAA,KAAjB;AAAwBE,MAAAA;AAAxB;AAA7B,GAAP;AACH,CAFM;AAIP,OAAO,MAAMS,SAAS,GAAIF,OAAD,IAAa;AAClC,SAAO;AAAEF,IAAAA,IAAI,EAAEV,UAAR;AAAoBY,IAAAA;AAApB,GAAP;AACH,CAFM,C,CAKP;AACA;AACA;;AAEA,eAAeL,WAAf","sourcesContent":["const SET_USER_DATA = 'SET-USER-DATA'\nconst AUTH_ERROR = 'AUTH-ERROR'\n \nconst initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    errors: null\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'SET-USER-DATA':\n            return {\n                ...state,\n                ...action.data\n            }\n            case 'AUTH-ERROR':\n                return{\n                    ...state,\n                    errors: action.message\n                }\n        default: {\n            return state;\n\n        }\n    }\n}\n\nexport const setUserData = (userId, login, email, isAuth) => {\n    return { type: SET_USER_DATA, data: { userId, login, email, isAuth } }\n}\n\nexport const authError = (message) => {\n    return { type: AUTH_ERROR, message}\n}\n\n\n// export const loginUser = () => {\n//     return { type: LOGIN_USER}\n// }\n\nexport default authReducer"]},"metadata":{},"sourceType":"module"}