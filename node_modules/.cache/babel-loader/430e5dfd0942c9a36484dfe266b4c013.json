{"ast":null,"code":"var _jsxFileName = \"/home/painkill/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/socialNetwork/roadtothefront/src/components/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useFormik } from 'formik';\nimport { authThunk } from \"../../redux/async/authThunk\";\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const loginSchema = Yup.object().shape({\n    email: Yup.string() // .email('Invalid email')\n    .required('Please enter email')\n  });\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      rememberMe: false\n    },\n    validationSchema: () => {\n      {\n        loginSchema;\n      }\n    },\n    onSubmit: values => {\n      console.log(values);\n      dispatch(authThunk(values));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Login\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"email\",\n          value: formik.values.email,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"password\",\n          value: formik.values.password,\n          onChange: formik.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"rememberMe\",\n          name: \"rememberMe\",\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 22\n        }, this), \"remember me\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/painkill/Рабочий стол/projects/socialNetwork/roadtothefront/src/components/Login/Login.jsx"],"names":["React","useDispatch","useFormik","authThunk","Yup","Login","props","dispatch","loginSchema","object","shape","email","string","required","formik","initialValues","password","rememberMe","validationSchema","onSubmit","values","console","log","handleSubmit","handleChange","touched","errors"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAAyB,QAAzB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAErB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,WAAW,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AACnCC,IAAAA,KAAK,EAAEP,GAAG,CAACQ,MAAJ,GACP;AADO,KAENC,QAFM,CAEG,oBAFH;AAD4B,GAAnB,CAApB;AAMA,QAAMC,MAAM,GAAGZ,SAAS,CAAC;AACrBa,IAAAA,aAAa,EAAE;AACXJ,MAAAA,KAAK,EAAE,EADI;AAEXK,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,UAAU,EAAE;AAHD,KADM;AAMrBC,IAAAA,gBAAgB,EAAE,MAAM;AAAC;AAACV,QAAAA,WAAW;AAAC;AAAC,KANlB;AAOrBW,IAAAA,QAAQ,EAAEC,MAAM,IAAG;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAb,MAAAA,QAAQ,CAACJ,SAAS,CAACiB,MAAD,CAAV,CAAR;AACH;AAVoB,GAAD,CAAxB;AAeA,sBACI;AAAA,qCAEI;AAAM,MAAA,QAAQ,EAAEN,MAAM,CAACS,YAAvB;AAAA,8BACI;AAAA,+BAAK;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,IAAI,EAAC,OAAvB;AAA+B,UAAA,IAAI,EAAC,OAApC;AAA4C,UAAA,WAAW,EAAC,OAAxD;AAAgE,UAAA,KAAK,EAAET,MAAM,CAACM,MAAP,CAAcT,KAArF;AAA4F,UAAA,QAAQ,EAAEG,MAAM,CAACU;AAA7G;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKV,MAAM,CAACW,OAAP,CAAed,KAAf,IAAwBG,MAAM,CAACY,MAAP,CAAcf,KAAtC,gBACR;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA,kBAAyBG,MAAM,CAACY,MAAP,CAAcf;AAAvC;AAAA;AAAA;AAAA;AAAA,cADQ,GAER,IAJG,eAKI;AAAA,+BAAK;AAAO,UAAA,EAAE,EAAC,UAAV;AAAqB,UAAA,IAAI,EAAC,UAA1B;AAAqC,UAAA,IAAI,EAAC,UAA1C;AAAqD,UAAA,WAAW,EAAC,UAAjE;AAA4E,UAAA,KAAK,EAAEG,MAAM,CAACM,MAAP,CAAcJ,QAAjG;AAA2G,UAAA,QAAQ,EAAEF,MAAM,CAACU;AAA5H;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,gCAAK;AAAO,UAAA,EAAE,EAAC,YAAV;AAAuB,UAAA,IAAI,EAAC,YAA5B;AAAyC,UAAA,IAAI,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAAL;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAxCD;;GAAMnB,K;UAEeJ,W,EAQFC,S;;;KAVbG,K;AA0CN,eAAeA,KAAf","sourcesContent":["import React from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { useFormik} from 'formik'\nimport { authThunk } from \"../../redux/async/authThunk\"\nimport * as Yup from 'yup'\n\nconst Login = (props) => {\n\n    const dispatch = useDispatch()\n\n    const loginSchema = Yup.object().shape({\n        email: Yup.string()\n        // .email('Invalid email')\n        .required('Please enter email')\n    })\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n            password: '',\n            rememberMe: false\n        },\n        validationSchema: () => {{loginSchema}},\n        onSubmit: values =>{\n            console.log(values)\n            dispatch(authThunk(values))\n        }\n    }\n\n    )\n\n    return (\n        <div>\n            Login\n            <form onSubmit={formik.handleSubmit}>\n                <div><input id='email' name='email' type='email' placeholder='email' value={formik.values.email} onChange={formik.handleChange} /></div>\n                {formik.touched.email && formik.errors.email ? (\n         <span className=\"error\">{formik.errors.email}</span>\n     ) : null}\n                <div><input id='password' name='password' type='password' placeholder='password' value={formik.values.password} onChange={formik.handleChange} /></div>\n                <div><input id='rememberMe' name='rememberMe' type='checkbox'/>remember me</div>\n                <button type='submit'>sign in</button>\n            </form>\n        </div>\n    )\n\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}