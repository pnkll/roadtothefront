{"ast":null,"code":"var _jsxFileName = \"/home/painkill/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/socialNetwork/roadtothefront/src/components/Profile/ProfileInfo/ProfileStatus.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateStatusThunk } from \"../../../redux/async/profileThunk\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProfileStatus = props => {\n  _s();\n\n  useEffect(() => {}, []);\n  console.log(props.profilePage.status);\n  console.log(localState.value);\n  const dispatch = useDispatch();\n  const [localState, setState] = useState({\n    editMode: false,\n    value: props.profilePage.status\n  });\n\n  const activatedMode = e => {\n    setState({\n      editMode: true\n    }); // // if (e.currentTarget === e.Target){\n    //     console.log('фокус установлен')\n    // // }\n    // console.log(localState.value)\n  };\n\n  const disabledMode = e => {\n    // setState({value: e.target.value})\n    // if (e.keyCode === 13) {\n    setState({\n      editMode: false\n    });\n    console.log(e.target.value);\n    dispatch(updateStatusThunk(e.target.value)); // }\n    // if (e.currentTarget === e.target){\n\n    console.log('фокус снят'); // }\n  }; // const onUpdateStatus = (event) => {\n  //     setState({ editMode: true, value: event.target.value })\n  //     // console.log(event)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: localState.editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n      autoFocus: true,\n      onBlur: disabledMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      onDoubleClick: activatedMode,\n      children: localState.value != null ? localState.value : 'Here need a status'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this)\n  }, void 0, false);\n};\n\n_s(ProfileStatus, \"G5TTC2AuWeLUK5SGK6srxvppPzY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ProfileStatus;\nexport default ProfileStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileStatus\");","map":{"version":3,"sources":["/home/painkill/Рабочий стол/projects/socialNetwork/roadtothefront/src/components/Profile/ProfileInfo/ProfileStatus.jsx"],"names":["useEffect","useState","useDispatch","useSelector","updateStatusThunk","ProfileStatus","props","console","log","profilePage","status","localState","value","dispatch","setState","editMode","activatedMode","e","disabledMode","target"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,QAAkC,mCAAlC;;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAE7BN,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;AAGAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,WAAN,CAAkBC,MAA9B;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAYG,UAAU,CAACC,KAAvB;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,QAAM,CAACS,UAAD,EAAaG,QAAb,IAAyBb,QAAQ,CAAC;AAAEc,IAAAA,QAAQ,EAAE,KAAZ;AAAmBH,IAAAA,KAAK,EAAEN,KAAK,CAACG,WAAN,CAAkBC;AAA5C,GAAD,CAAvC;;AAEA,QAAMM,aAAa,GAAIC,CAAD,IAAO;AACzBH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAR,CADyB,CAEzB;AACA;AACA;AACA;AAEH,GAPD;;AASA,QAAMG,YAAY,GAAID,CAAD,IAAO;AACxB;AACA;AACIH,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAAR;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYS,CAAC,CAACE,MAAF,CAASP,KAArB;AAEAC,IAAAA,QAAQ,CAACT,iBAAiB,CAACa,CAAC,CAACE,MAAF,CAASP,KAAV,CAAlB,CAAR,CANoB,CAOxB;AAEA;;AACIL,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAVoB,CAWxB;AACH,GAZD,CApB6B,CAiC7B;AACA;AACA;AACA;;;AACA,sBAAQ;AAAA,cAEAG,UAAU,CAACI,QAAX,gBAAsB;AAAO,MAAA,SAAS,EAAE,IAAlB;AAAwB,MAAA,MAAM,EAAEG;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAtB,gBACM;AAAM,MAAA,aAAa,EAAEF,aAArB;AAAA,gBAAqCL,UAAU,CAACC,KAAX,IAAoB,IAApB,GAA2BD,UAAU,CAACC,KAAtC,GAA8C;AAAnF;AAAA;AAAA;AAAA;AAAA;AAHN,mBAAR;AAMH,CA3CD;;GAAMP,a;UAOeH,W;;;KAPfG,a;AA6CN,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { updateStatusThunk } from \"../../../redux/async/profileThunk\"\n\nconst ProfileStatus = (props) => {\n\n    useEffect(() => {\n\n    }, [])\n    console.log(props.profilePage.status)\n    console.log(localState.value)\n    const dispatch = useDispatch()\n\n    const [localState, setState] = useState({ editMode: false, value: props.profilePage.status })\n\n    const activatedMode = (e) => {\n        setState({ editMode: true })\n        // // if (e.currentTarget === e.Target){\n        //     console.log('фокус установлен')\n        // // }\n        // console.log(localState.value)\n\n    }\n\n    const disabledMode = (e) => {\n        // setState({value: e.target.value})\n        // if (e.keyCode === 13) {\n            setState({ editMode: false })\n            console.log(e.target.value)\n            \n            dispatch(updateStatusThunk(e.target.value))\n        // }\n\n        // if (e.currentTarget === e.target){\n            console.log('фокус снят')\n        // }\n    }\n    // const onUpdateStatus = (event) => {\n    //     setState({ editMode: true, value: event.target.value })\n    //     // console.log(event)\n    // }\n    return (<>\n        {\n            localState.editMode ? <input autoFocus={true} onBlur={disabledMode} />\n                : <span onDoubleClick={activatedMode}>{localState.value != null ? localState.value : 'Here need a status'}</span>\n        }</>\n    )\n}\n\nexport default ProfileStatus"]},"metadata":{},"sourceType":"module"}