{"ast":null,"code":"var _jsxFileName = \"/home/painkill/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/projects/socialNetwork/roadtothefront/src/components/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useFormik } from 'formik';\nimport { loginThunk } from \"../../redux/async/authThunk\";\nimport { useForm } from 'react-hook-form';\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as Yup from 'yup';\nimport classes from './Login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    register,\n    formState: {\n      errors,\n      isValid\n    },\n    handleSubmit,\n    reset //очистка формы после отправки данных\n\n  } = useForm({\n    mode: 'onBlur'\n  });\n\n  const onSubmit = data => {\n    console.log(data);\n    dispatch(loginThunk(data));\n    reset();\n    setTimeout(() => {\n      props.state.auth.isAuth;\n    }, 3000);\n  };\n\n  useEffect(() => {\n    console.log(props.state.auth.isAuth);\n    console.log(props.state.auth.userId);\n\n    if (props.state.auth.isAuth = true && props.state.auth.userId != null) {\n      console.log('sds');\n      navigate(`/profile/${props.state.auth.userId}`);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"E-mail:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          ...register('email', {\n            required: 'Поле обязательное к заполнению',\n            minLength: {\n              value: 5,\n              message: 'Минимум 5 символов'\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), (errors === null || errors === void 0 ? void 0 : errors.email) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.error,\n          children: (errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message) || 'Общая ошибка'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"password:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          ...register('password', {\n            required: 'Заполните поле пароля',\n            minLength: {\n              value: 6,\n              message: 'Длина пароля минимум 6 символов'\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), (errors === null || errors === void 0 ? void 0 : errors.password) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.error,\n          children: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        ...register('rememberMe')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 22\n      }, this), \"Remember me?\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        disabled: !isValid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"0Rudg+K85iqQgUvkoWxNZsFrF6E=\", false, function () {\n  return [useDispatch, useNavigate, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/painkill/Рабочий стол/projects/socialNetwork/roadtothefront/src/components/Login/Login.jsx"],"names":["React","useDispatch","useFormik","loginThunk","useForm","useEffect","useNavigate","Yup","classes","Login","props","dispatch","navigate","register","formState","errors","isValid","handleSubmit","reset","mode","onSubmit","data","console","log","setTimeout","state","auth","isAuth","userId","required","minLength","value","message","email","error","password"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { useFormik } from 'formik'\nimport { loginThunk } from \"../../redux/async/authThunk\"\nimport { useForm } from 'react-hook-form'\nimport { useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport * as Yup from 'yup'\nimport classes from './Login.module.css'\n\nconst Login = (props) => {\n\nconst dispatch = useDispatch()\n\nconst navigate = useNavigate()\n\n    const {\n        register,\n        formState: {\n            errors,\n            isValid\n        },\n        handleSubmit,\n        reset //очистка формы после отправки данных\n    } = useForm({ mode: 'onBlur' })\n\n    const onSubmit = (data) => {\n        console.log(data)\n        dispatch(loginThunk(data))\n        reset()\n        setTimeout(()=>{\n            props.state.auth.isAuth\n        }, 3000)\n    }\n\n    useEffect (()=>{\n        console.log(props.state.auth.isAuth)\n        console.log(props.state.auth.userId)\n        if (props.state.auth.isAuth = true && props.state.auth.userId != null){\n            console.log('sds')\n            navigate(`/profile/${props.state.auth.userId}`)\n        }\n    },[])\n\n    return (\n        <>\n            <h1>Login</h1>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <label>E-mail:<br />\n                    <input type='email' {...register('email',\n                        {\n                            required: 'Поле обязательное к заполнению',\n                            minLength: { value: 5, message: 'Минимум 5 символов' }\n                        })} />\n                    {errors?.email && <div className={classes.error}>{errors?.email?.message || 'Общая ошибка'}</div>}\n                </label><br/>\n                <label>password:<br/>\n                    <input type='password' {...register('password',\n                        {\n                            required: 'Заполните поле пароля',\n                            minLength: { value: 6, message: 'Длина пароля минимум 6 символов' }\n                        })} />\n                    {errors?.password && <div className={classes.error}>{errors?.password?.message}</div>}\n                </label>\n                <br/><input type='checkbox' {...register('rememberMe')}/>Remember me?\n\n                <br/><input type='submit' disabled={!isValid} />\n            </form>\n        </>\n    )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}