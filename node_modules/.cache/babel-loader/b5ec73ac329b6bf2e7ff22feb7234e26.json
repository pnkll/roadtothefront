{"ast":null,"code":"var _jsxFileName = \"/home/pnkll/Documents/pp/roadtothefront/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport { follow, unfollow, setUsers, showMore, setPage, setPageCount, toogleIsFetching } from \"../../redux/usersReducer\";\nimport { connect } from \"react-redux\";\nimport Users from \"./Users\";\nimport * as axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onShowMore = () => {\n      this.props.showMore();\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.users.length === 0) {\n      this.props.toogleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items);\n        this.props.toogleIsFetching(false);\n      });\n    }\n\n    console.log(this);\n  }\n\n  componentWillUnmount() {// this.props.users.length = 0\n  }\n\n  onShowMore(pageNum) {// let heh = props\n  }\n\n  onSetPage(pageNum) {\n    this.props.setPage(pageNum);\n    this.props.toogleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNum}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.toogleIsFetching(false);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Users, {\n        pageCount: this.props.pageCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        users: this.props.users,\n        onSetPage: this.onSetPage.bind(this),\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        isFetching: this.props.isFetching\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 18\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    pageCount: state.usersPage.pageCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n}; // const mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => dispatch(followAC(userId)),\n//         unfollow: (userId) => dispatch(unfollowAC(userId)),\n//         setUsers: (users) => dispatch(setUsersAC(users)),\n//         showMore: (users) => dispatch(showMoreAC(users)),\n//         setPage: (id) => dispatch(setPageAC(id)),\n//         setPageCount: (pageCount) => dispatch(setPageCountAC(pageCount)),\n//         toogleIsFetching: (isFetching) => dispatch(toogleIsFetchingAC(isFetching))\n//     }\n// }\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  showMore,\n  setPage,\n  setPageCount,\n  toogleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["/home/pnkll/Documents/pp/roadtothefront/src/components/Users/UsersContainer.jsx"],"names":["React","follow","unfollow","setUsers","showMore","setPage","setPageCount","toogleIsFetching","connect","Users","axios","UsersContainer","Component","constructor","props","onShowMore","componentDidMount","users","length","get","currentPage","pageSize","then","response","data","items","console","log","componentWillUnmount","pageNum","onSetPage","render","pageCount","bind","isFetching","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { follow, unfollow, setUsers, showMore, setPage, setPageCount, toogleIsFetching } from \"../../redux/usersReducer\"\nimport { connect } from \"react-redux\"\nimport Users from \"./Users\";\nimport * as axios from 'axios'\n\nclass UsersContainer extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n        this.onShowMore = () => {\n            this.props.showMore()\n        }\n\n    }\n\n    componentDidMount() {\n        if (this.props.users.length === 0) {\n            this.props.toogleIsFetching(true);\n            axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\n                .then(response => {\n                    this.props.setUsers(response.data.items)\n                    this.props.toogleIsFetching(false)\n                })\n        }\n\n        console.log(this)\n    }\n\n    componentWillUnmount() {\n        // this.props.users.length = 0\n    }\n\n    onShowMore(pageNum) {\n        // let heh = props\n    }\n\n    onSetPage(pageNum) {\n        this.props.setPage(pageNum)\n        this.props.toogleIsFetching(true)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNum}&count=${this.props.pageSize}`)\n            .then(response => {\n                this.props.setUsers(response.data.items)\n                this.props.toogleIsFetching(false)\n            })\n    }\n\n\n    render() {\n\n\n        return <><Users\n            pageCount={this.props.pageCount}\n            pageSize={this.props.pageSize}\n            currentPage={this.props.currentPage}\n            users={this.props.users}\n            onSetPage={this.onSetPage.bind(this)}\n            follow={this.props.follow}\n            unfollow={this.props.unfollow}\n            isFetching={this.props.isFetching}\n        />\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        pageCount: state.usersPage.pageCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching\n    }\n}\n\n// const mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => dispatch(followAC(userId)),\n//         unfollow: (userId) => dispatch(unfollowAC(userId)),\n//         setUsers: (users) => dispatch(setUsersAC(users)),\n//         showMore: (users) => dispatch(showMoreAC(users)),\n//         setPage: (id) => dispatch(setPageAC(id)),\n//         setPageCount: (pageCount) => dispatch(setPageCountAC(pageCount)),\n//         toogleIsFetching: (isFetching) => dispatch(toogleIsFetchingAC(isFetching))\n//     }\n// }\n\n\n\nexport default connect(mapStateToProps, \n    { follow, unfollow, setUsers, showMore, \n        setPage, setPageCount, toogleIsFetching })(UsersContainer)"]},"metadata":{},"sourceType":"module"}