{"ast":null,"code":"const SHOW_MORE = 'SHOW-MORE';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SETUSERS = 'SETUSERS';\nconst SET_PAGE = 'SET-PAGE';\nconst initialState = {\n  users: []\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FOLLOW':\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case 'UNFOLLOW':\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case 'SETUSERS':\n      return { ...state,\n        users: [...state.users, ...action.users]\n      };\n\n    case 'SHOW-MORE':\n      return {\n        users: [...action.users]\n      };\n\n    case 'SET-PAGE':\n      return { ...state,\n        users: [...action.users]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SETUSERS,\n  users\n});\nexport const showMoreAC = (users, number) => ({\n  type: SHOW_MORE,\n  users,\n  page: number\n});\nexport const setPageAC = (users, pageNum) => ({\n  type: SET_PAGE,\n  users,\n  pageNum\n});\nexport default usersReducer;","map":{"version":3,"sources":["/home/pnkll/Documents/pp/roadtothefront/src/redux/usersReducer.js"],"names":["SHOW_MORE","FOLLOW","UNFOLLOW","SETUSERS","SET_PAGE","initialState","users","usersReducer","state","action","type","map","u","id","userId","followed","followAC","unfollowAC","setUsersAC","showMoreAC","number","page","setPageAC","pageNum"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAlB;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;;AAMA,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAO,EACH,GAAGF,KADA;AACOF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAgBC,CAAC,IAAI;AAClC,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBACI,EAAE,GAAGF,CAAL;AAAQG,cAAAA,QAAQ,EAAE;AAAlB,aADJ;AAGH;;AACD,iBAAOH,CAAP;AACH,SAPgB;AADd,OAAP;;AAUJ,SAAK,UAAL;AACI,aAAO,EACH,GAAGJ,KADA;AACOF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,GAAZ,CAAgBC,CAAC,IAAI;AAClC,cAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;AACxB,mBACI,EAAE,GAAGF,CAAL;AAAQG,cAAAA,QAAQ,EAAE;AAAlB,aADJ;AAGH;;AACD,iBAAOH,CAAP;AACH,SAPgB;AADd,OAAP;;AAUJ,SAAK,UAAL;AACI,aAAO,EACH,GAAGJ,KADA;AACOF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiB,GAAGG,MAAM,CAACH,KAA3B;AADd,OAAP;;AAGJ,SAAK,WAAL;AACI,aAAO;AACHA,QAAAA,KAAK,EAAE,CAAC,GAAGG,MAAM,CAACH,KAAX;AADJ,OAAP;;AAGJ,SAAK,UAAL;AACI,aAAO,EACH,GAAGE,KADA;AACOF,QAAAA,KAAK,EAAE,CAAC,GAAGG,MAAM,CAACH,KAAX;AADd,OAAP;;AAGJ;AACI,aAAOE,KAAP;AApCR;AAsCH,CAvCD;;AAyCA,OAAO,MAAMQ,QAAQ,GAAIF,MAAD,KAAa;AAAEJ,EAAAA,IAAI,EAAET,MAAR;AAAgBa,EAAAA;AAAhB,CAAb,CAAjB;AACP,OAAO,MAAMG,UAAU,GAAIH,MAAD,KAAa;AAAEJ,EAAAA,IAAI,EAAER,QAAR;AAAkBY,EAAAA;AAAlB,CAAb,CAAnB;AACP,OAAO,MAAMI,UAAU,GAAIZ,KAAD,KAAY;AAAEI,EAAAA,IAAI,EAAEP,QAAR;AAAkBG,EAAAA;AAAlB,CAAZ,CAAnB;AACP,OAAO,MAAMa,UAAU,GAAG,CAACb,KAAD,EAAQc,MAAR,MAAoB;AAAEV,EAAAA,IAAI,EAAEV,SAAR;AAAmBM,EAAAA,KAAnB;AAA0Be,EAAAA,IAAI,EAAED;AAAhC,CAApB,CAAnB;AACP,OAAO,MAAME,SAAS,GAAG,CAAChB,KAAD,EAAQiB,OAAR,MAAqB;AAAEb,EAAAA,IAAI,EAAEN,QAAR;AAAkBE,EAAAA,KAAlB;AAAyBiB,EAAAA;AAAzB,CAArB,CAAlB;AAEP,eAAehB,YAAf","sourcesContent":["const SHOW_MORE = 'SHOW-MORE'\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SETUSERS = 'SETUSERS'\nconst SET_PAGE = 'SET-PAGE'\n\nconst initialState = {\n    users: []\n}\n\n\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'FOLLOW':\n            return {\n                ...state, users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return (\n                            { ...u, followed: true }\n                        )\n                    }\n                    return u;\n                })\n            }\n        case 'UNFOLLOW':\n            return {\n                ...state, users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return (\n                            { ...u, followed: false }\n                        )\n                    }\n                    return u;\n                })\n            }\n        case 'SETUSERS':\n            return {\n                ...state, users: [...state.users, ...action.users]\n            }\n        case 'SHOW-MORE':\n            return {\n                users: [...action.users]\n            }\n        case 'SET-PAGE':\n            return {\n                ...state, users: [...action.users]\n            }\n        default:\n            return state;\n    }\n}\n\nexport const followAC = (userId) => ({ type: FOLLOW, userId })\nexport const unfollowAC = (userId) => ({ type: UNFOLLOW, userId })\nexport const setUsersAC = (users) => ({ type: SETUSERS, users })\nexport const showMoreAC = (users, number) => ({ type: SHOW_MORE, users, page: number })\nexport const setPageAC = (users, pageNum) => ({ type: SET_PAGE, users, pageNum } )\n\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}