{"ast":null,"code":"const SHOW_MORE = 'SHOW-MORE';\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SETUSERS = 'SETUSERS';\nconst initialState = {\n  users: [{\n    id: 1,\n    followed: true,\n    avatar: 'img',\n    fullname: '',\n    status: '',\n    location: {\n      country: '',\n      city: ''\n    }\n  }, {\n    id: 2,\n    followed: false,\n    avatar: 'img',\n    fullname: '',\n    status: '',\n    location: {\n      country: '',\n      city: ''\n    }\n  }]\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FOLLOW':\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case 'UNFOLLOW':\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case 'SETUSERS':\n      return { ...state,\n        users: [...state.users, ...action.users]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userId => ({\n  type: FOLLOW,\n  id: userId\n});\nexport const unfollowAC = userId => ({\n  type: UNFOLLOW,\n  id: userId\n});\nexport const setUsersAC = users => ({\n  type: SETUSERS,\n  users\n});\nexport default usersReducer;","map":{"version":3,"sources":["/home/pnkll/Documents/pp/roadtothefront/src/redux/usersReducer.js"],"names":["SHOW_MORE","FOLLOW","UNFOLLOW","SETUSERS","initialState","users","id","followed","avatar","fullname","status","location","country","city","usersReducer","state","action","type","map","u","userId","followAC","unfollowAC","setUsersAC"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAlB;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CACH;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,QAAQ,EAAE,IAAnB;AAAyBC,IAAAA,MAAM,EAAE,KAAjC;AAAwCC,IAAAA,QAAQ,EAAE,EAAlD;AAAsDC,IAAAA,MAAM,EAAE,EAA9D;AAAkEC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,IAAI,EAAE;AAArB;AAA5E,GADG,EAEH;AAAEP,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,QAAQ,EAAE,KAAnB;AAA0BC,IAAAA,MAAM,EAAE,KAAlC;AAAyCC,IAAAA,QAAQ,EAAE,EAAnD;AAAuDC,IAAAA,MAAM,EAAE,EAA/D;AAAmEC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,IAAI,EAAE;AAArB;AAA7E,GAFG;AADU,CAArB;;AAOA,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBX,YAAyB;AAAA,MAAXY,MAAW;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAO,EACH,GAAGF,KADA;AACOV,QAAAA,KAAK,EAAEU,KAAK,CAACV,KAAN,CAAYa,GAAZ,CAAgBC,CAAC,IAAI;AAClC,cAAIA,CAAC,CAACb,EAAF,KAASU,MAAM,CAACI,MAApB,EAA2B;AACvB,mBACI,EAAC,GAAGD,CAAJ;AAAOZ,cAAAA,QAAQ,EAAE;AAAjB,aADJ;AAGH;;AACD,iBAAOY,CAAP;AACH,SAPgB;AADd,OAAP;;AAUJ,SAAK,UAAL;AACI,aAAO,EACH,GAAGJ,KADA;AACOV,QAAAA,KAAK,EAAEU,KAAK,CAACV,KAAN,CAAYa,GAAZ,CAAgBC,CAAC,IAAG;AACjC,cAAIA,CAAC,CAACb,EAAF,KAASU,MAAM,CAACI,MAApB,EAA2B;AACvB,mBACI,EAAC,GAAGD,CAAJ;AAAOZ,cAAAA,QAAQ,EAAE;AAAjB,aADJ;AAGH;;AACD,iBAAOY,CAAP;AACH,SAPgB;AADd,OAAP;;AAUA,SAAK,UAAL;AACI,aAAM,EACF,GAAGJ,KADD;AACQV,QAAAA,KAAK,EAAE,CAAE,GAAGU,KAAK,CAACV,KAAX,EAAkB,GAAGW,MAAM,CAACX,KAA5B;AADf,OAAN;;AAGR;AACI,aAAOU,KAAP;AA5BR;AA8BH,CA/BD;;AAiCA,OAAO,MAAMM,QAAQ,GAAID,MAAD,KAAa;AAAEH,EAAAA,IAAI,EAAEhB,MAAR;AAAgBK,EAAAA,EAAE,EAAEc;AAApB,CAAb,CAAjB;AACP,OAAO,MAAME,UAAU,GAAIF,MAAD,KAAa;AAAEH,EAAAA,IAAI,EAAEf,QAAR;AAAkBI,EAAAA,EAAE,EAAEc;AAAtB,CAAb,CAAnB;AACP,OAAO,MAAMG,UAAU,GAAIlB,KAAD,KAAY;AAACY,EAAAA,IAAI,EAAEd,QAAP;AAAiBE,EAAAA;AAAjB,CAAZ,CAAnB;AAEP,eAAeS,YAAf","sourcesContent":["const SHOW_MORE = 'SHOW-MORE'\nconst FOLLOW = 'FOLLOW'\nconst UNFOLLOW = 'UNFOLLOW'\nconst SETUSERS = 'SETUSERS'\n\nconst initialState = {\n    users: [\n        { id: 1, followed: true, avatar: 'img', fullname: '', status: '', location: { country: '', city: '' } },\n        { id: 2, followed: false, avatar: 'img', fullname: '', status: '', location: { country: '', city: '' } }\n    ]\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'FOLLOW':\n            return {\n                ...state, users: state.users.map(u => {\n                    if (u.id === action.userId){\n                        return (\n                            {...u, followed: true}\n                        )\n                    }\n                    return u;\n                })\n            }\n        case 'UNFOLLOW':\n            return {\n                ...state, users: state.users.map(u =>{\n                    if (u.id === action.userId){\n                        return (\n                            {...u, followed: false}\n                        )\n                    }\n                    return u;\n                })\n            }\n            case 'SETUSERS':\n                return{\n                    ...state, users: [ ...state.users, ...action.users ]\n                }\n        default:\n            return state;\n    }\n}\n\nexport const followAC = (userId) => ({ type: FOLLOW, id: userId })\nexport const unfollowAC = (userId) => ({ type: UNFOLLOW, id: userId })\nexport const setUsersAC = (users) => ({type: SETUSERS, users})\n\nexport default usersReducer"]},"metadata":{},"sourceType":"module"}