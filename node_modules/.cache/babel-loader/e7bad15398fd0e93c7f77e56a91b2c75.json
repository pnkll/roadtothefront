{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/reactApps/pet/roadtothefront/src/components/Profile/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport classes from './Profile.module.css';\nimport MyPosts from './My posts/MyPosts';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport { clear } from '../../redux/profileReducer';\nimport { useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Preloader from '../default/Preloader/Preloader';\nimport { getProfile } from '../../redux/async/profileThunk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Profile(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const profilePage = useSelector(state => state.profilePage);\n  const profile = useSelector(state => state.profilePage.user);\n  const params = useParams();\n  const currentUser = params.id;\n  useEffect(() => {\n    dispatch(getProfile(currentUser));\n    return () => {\n      dispatch(clear());\n    };\n  }, []); // if (profile != null) {\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsxDEV(ProfileInfo, {\n      user: profile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MyPosts, {\n      profilePage: profilePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this); // }\n  // else { return <Preloader /> }\n}\n\n_s(Profile, \"kbgzQD46LWGNYEhse1VbmDd68rg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useParams];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/user/Документы/reactApps/pet/roadtothefront/src/components/Profile/Profile.jsx"],"names":["classes","MyPosts","ProfileInfo","clear","useEffect","useParams","useSelector","useDispatch","Preloader","getProfile","Profile","props","dispatch","profilePage","state","profile","user","params","currentUser","id","content"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,SAASC,UAAT,QAA2B,gCAA3B;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAMM,WAAW,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,WAAhB,CAA/B;AACA,QAAME,OAAO,GAAGT,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,WAAN,CAAkBG,IAA5B,CAA3B;AACA,QAAMC,MAAM,GAAGZ,SAAS,EAAxB;AACA,QAAMa,WAAW,GAAGD,MAAM,CAACE,EAA3B;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACH,UAAU,CAACS,WAAD,CAAX,CAAR;AACA,WAAO,MAAM;AAAEN,MAAAA,QAAQ,CAACT,KAAK,EAAN,CAAR;AAAmB,KAAlC;AACD,GAHQ,EAGN,EAHM,CAAT,CARsB,CAatB;;AAEE,sBAEE;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACoB,OAAxB;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEL;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,WAAW,EAAEF;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CAfoB,CAsBtB;AACA;AACD;;GAxBQH,O;UACUH,W,EAEGD,W,EACJA,W,EACDD,S;;;KALRK,O;AA0BT,eAAeA,OAAf","sourcesContent":["import classes from './Profile.module.css'\nimport MyPosts from './My posts/MyPosts'\nimport ProfileInfo from './ProfileInfo/ProfileInfo'\nimport { clear } from '../../redux/profileReducer'\nimport { useEffect } from 'react'\nimport { useParams } from 'react-router'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Preloader from '../default/Preloader/Preloader'\nimport { getProfile } from '../../redux/async/profileThunk'\n\nfunction Profile(props) {\n  const dispatch = useDispatch()\n\n  const profilePage = useSelector(state => state.profilePage)\n  const profile = useSelector(state => state.profilePage.user)\n  const params = useParams()\n  const currentUser = params.id\n\n  useEffect(() => {\n    dispatch(getProfile(currentUser))\n    return () => { dispatch(clear()) }\n  }, [])\n\n  // if (profile != null) {\n\n    return (\n\n      <div className={classes.content}>\n        <ProfileInfo user={profile} />\n        <MyPosts profilePage={profilePage} />\n      </div>\n    )\n  // }\n  // else { return <Preloader /> }\n}\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}