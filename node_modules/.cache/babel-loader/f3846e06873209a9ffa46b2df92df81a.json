{"ast":null,"code":"var _jsxFileName = \"/home/pnkll/Documents/pp/roadtothefront/src/components/Dialogs/Dialogs.jsx\";\nimport classes from './Dialogs.module.css';\nimport Message from './Message/Message';\nimport DialogItem from './DialogItem/DialogItem';\nimport React from 'react';\nimport { addMessageActionCreator, updateMessageActionCreator } from '../../redux/dialogsReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dialogs extends React.Component {\n  render() {\n    let onAddMessage = () => {\n      this.props.addMess();\n    };\n\n    let onUpdateMessage = elem => {\n      let newText = elem.target.value;\n      this.props.updateMess(newText);\n    };\n\n    let messagesElems = this.props.messages.map(m => {\n      if (m.userid == 'me') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.myMessage,\n          children: /*#__PURE__*/_jsxDEV(Message, {\n            avatar: m.image,\n            text: m.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.message,\n          children: /*#__PURE__*/_jsxDEV(Message, {\n            avatar: m.image,\n            text: m.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }, this);\n      }\n    });\n    var dialogsElems = this.props.dialogs.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n      avatar: d.image,\n      id: d.id,\n      name: d.name,\n      path: '/dialogs/' + d.id\n    }, d.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 36\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dialogs,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.dialogsItems,\n        children: dialogsElems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.messages,\n        children: [messagesElems, /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: this.props.dialogsPage.newMessageValue,\n          onChange: onUpdateMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onAddMessage,\n          children: \"Add message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Dialogs;","map":{"version":3,"sources":["/home/pnkll/Documents/pp/roadtothefront/src/components/Dialogs/Dialogs.jsx"],"names":["classes","Message","DialogItem","React","addMessageActionCreator","updateMessageActionCreator","Dialogs","Component","render","onAddMessage","props","addMess","onUpdateMessage","elem","newText","target","value","updateMess","messagesElems","messages","map","m","userid","myMessage","image","message","dialogsElems","dialogs","d","id","name","dialogsItems","dialogsPage","newMessageValue"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,EAAkCC,0BAAlC,QAAoE,4BAApE;;;AAIA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAqC;AAEnCC,EAAAA,MAAM,GAAE;AAEN,QAAIC,YAAY,GAAG,MAAM;AACvB,WAAKC,KAAL,CAAWC,OAAX;AACD,KAFD;;AAKA,QAAIC,eAAe,GAAIC,IAAD,IAAS;AAC7B,UAAIC,OAAO,GAAGD,IAAI,CAACE,MAAL,CAAYC,KAA1B;AACA,WAAKN,KAAL,CAAWO,UAAX,CAAsBH,OAAtB;AACD,KAHD;;AAKA,QAAII,aAAa,GACf,KAAKR,KAAL,CAAWS,QAAX,CAAoBC,GAApB,CAAwBC,CAAC,IAAI;AAC3B,UAAIA,CAAC,CAACC,MAAF,IAAY,IAAhB,EAAsB;AACpB,4BAAQ;AAAK,UAAA,SAAS,EAAEtB,OAAO,CAACuB,SAAxB;AAAA,iCAAmC,QAAC,OAAD;AAAS,YAAA,MAAM,EAAEF,CAAC,CAACG,KAAnB;AAA0B,YAAA,IAAI,EAAEH,CAAC,CAACI;AAAlC;AAAA;AAAA;AAAA;AAAA;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAAR;AACD,OAFD,MAGK;AACH,4BAAQ;AAAK,UAAA,SAAS,EAAEzB,OAAO,CAACyB,OAAxB;AAAA,iCAAiC,QAAC,OAAD;AAAS,YAAA,MAAM,EAAEJ,CAAC,CAACG,KAAnB;AAA0B,YAAA,IAAI,EAAEH,CAAC,CAACI;AAAlC;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAAR;AACD;AACF,KAPD,CADF;AAUA,QAAIC,YAAY,GACd,KAAKhB,KAAL,CAAWiB,OAAX,CAAmBP,GAAnB,CAAuBQ,CAAC,iBAAK,QAAC,UAAD;AAAuB,MAAA,MAAM,EAAEA,CAAC,CAACJ,KAAjC;AAAwC,MAAA,EAAE,EAAEI,CAAC,CAACC,EAA9C;AAAkD,MAAA,IAAI,EAAED,CAAC,CAACE,IAA1D;AAAgE,MAAA,IAAI,EAAE,cAAcF,CAAC,CAACC;AAAtF,OAAiBD,CAAC,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,YAA7B,CADF;AAGA,wBACE;AAAK,MAAA,SAAS,EAAE7B,OAAO,CAAC2B,OAAxB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAE3B,OAAO,CAAC+B,YAAxB;AAAA,kBACGL;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAE1B,OAAO,CAACmB,QAAxB;AAAA,mBACGD,aADH,eAEE;AAAU,UAAA,KAAK,EAAE,KAAKR,KAAL,CAAWsB,WAAX,CAAuBC,eAAxC;AAAyD,UAAA,QAAQ,EAAErB;AAAnE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,OAAO,EAAEH,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AAxCkC;;AA2CrC,eAAeH,OAAf","sourcesContent":["import classes from './Dialogs.module.css'\nimport Message from './Message/Message'\nimport DialogItem from './DialogItem/DialogItem';\nimport React from 'react';\nimport { addMessageActionCreator, updateMessageActionCreator } from '../../redux/dialogsReducer'\n\n\n\nclass Dialogs extends React.Component{\n\n  render(){\n    \n    let onAddMessage = () => {\n      this.props.addMess()\n    }\n  \n  \n    let onUpdateMessage = (elem) =>{\n      let newText = elem.target.value\n      this.props.updateMess(newText)\n    }\n  \n    let messagesElems =\n      this.props.messages.map(m => {\n        if (m.userid == 'me') {\n          return (<div className={classes.myMessage}><Message avatar={m.image} text={m.message} /></div>)\n        }\n        else {\n          return (<div className={classes.message}><Message avatar={m.image} text={m.message} /></div>)\n        }\n      })\n  \n    var dialogsElems =\n      this.props.dialogs.map(d => (<DialogItem key={d.id} avatar={d.image} id={d.id} name={d.name} path={'/dialogs/' + d.id} />))\n  \n    return (\n      <div className={classes.dialogs}>\n        <div className={classes.dialogsItems}>\n          {dialogsElems}\n        </div>\n        <div className={classes.messages}>\n          {messagesElems}\n          <textarea value={this.props.dialogsPage.newMessageValue} onChange={onUpdateMessage}></textarea>\n          <button onClick={onAddMessage}>Add message</button>\n        </div>\n      </div>\n  \n    )\n  }\n}\n\nexport default Dialogs"]},"metadata":{},"sourceType":"module"}