{"version":3,"file":"static/js/391.253d7877.chunk.js","mappings":"8KACA,GAAgB,QAAU,yBAAyB,UAAY,2BAA2B,QAAU,yBAAyB,SAAW,2BCAxI,G,QAA0B,0B,SCS1B,EAPgB,SAACA,GAEf,OACE,iBAAKC,UAAWC,EAAhB,WAAiC,gBAAKC,IAAKH,EAAMI,SAAUJ,EAAMK,SCLrE,EAAyE,2B,UCSzE,MANA,SAAoBL,GAClB,OACE,gBAAKC,UAAWC,EAAhB,UAAgC,UAAC,KAAD,CAASI,GAAIN,EAAMO,KAAnB,WAAyB,gBAAKJ,IAAKH,EAAMI,SAAUJ,EAAMQ,W,8BCmD7F,EA/CgB,SAACR,GAEf,IAAMS,GAAWC,EAAAA,EAAAA,MAEjB,GAAyCC,EAAAA,EAAAA,MAAjCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MAE1BC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYH,YAClDI,GAAUH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYC,WAQnDC,IAPoBJ,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,YAAYG,mBAQ7DN,EAASO,KAAI,SAAAC,GACX,MAAgB,MAAZA,EAAEC,QACI,gBAAiBvB,UAAWC,EAAAA,UAA5B,UAA+C,SAAC,EAAD,CAASE,OAAQmB,EAAEE,MAAOpB,KAAMkB,EAAEG,WAAvEH,EAAEI,MAGZ,gBAAiB1B,UAAWC,EAAAA,QAA5B,UAA6C,SAAC,EAAD,CAASE,OAAQmB,EAAEE,MAAOpB,KAAMkB,EAAEG,WAArEH,EAAEI,SAItBC,EACFT,EAAQG,KAAI,SAAAO,GAAC,OAAK,SAAC,EAAD,CAAuBzB,OAAQyB,EAAEJ,MAAOK,GAAID,EAAEC,GAAItB,KAAMqB,EAAErB,KAAMD,KAAM,YAAcsB,EAAEC,IAArED,EAAEC,OAGrC,OACE,iBAAK7B,UAAWC,EAAAA,QAAhB,WACE,gBAAKD,UAAWC,EAAAA,aAAhB,SACG0B,KAEH,iBAAK3B,UAAWC,EAAAA,SAAhB,WACE,kCACCkB,GACD,kBAAMW,SAAUlB,GA3BL,SAACmB,GAClBvB,GAASwB,EAAAA,EAAAA,IAAwBD,EAAMN,UACvCZ,OAyBM,WACE,0BAAOoB,KAAK,QAAWtB,EAAS,cAChC,kBAAOsB,KAAK","sources":["webpack://study_project/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://study_project/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","webpack://study_project/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"myMessage\":\"Dialogs_myMessage__y997M\",\"message\":\"Dialogs_message__ZEWo0\",\"messages\":\"Dialogs_messages__Cg2l+\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__rjHQQ\"};","import React from 'react'\nimport classes from './Message.module.css'\n\nconst Message = (props) => {\n\n  return (\n    <div className={classes.message}><img src={props.avatar}/>{props.text}</div>\n  )\n}\n\nexport default Message","// extracted by mini-css-extract-plugin\nexport default {\"dialogsItems\":\"DialogItem_dialogsItems__ReLAZ\",\"dialog\":\"DialogItem_dialog__gU34-\"};","import React from 'react'\nimport classes from './DialogItem.module.css'\nimport { NavLink } from 'react-router-dom'\n\nfunction DialogItem(props) {\n  return (\n    <div className={classes.dialog}><NavLink to={props.path}><img src={props.avatar}/>{props.name}</NavLink></div>\n  )\n}\n\nexport default DialogItem","import classes from './Dialogs.module.css'\nimport Message from './Message/Message'\nimport DialogItem from './DialogItem/DialogItem';\nimport React from 'react';\nimport { addMessageActionCreator, updateMessageActionCreator } from '../../redux/dialogsReducer'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\n\n\n\nconst Dialogs = (props) => {\n\n  const dispatch = useDispatch()\n\n  const { register, handleSubmit, reset} = useForm()\n\n  const messages = useSelector(state => state.dialogsPage.messages)\n  const dialogs = useSelector(state => state.dialogsPage.dialogs)\n  const newMessageValue = useSelector(state => state.dialogsPage.newMessageValue)\n\n  let onAddMessage = (value) => {\n    dispatch(addMessageActionCreator(value.message))\n    reset()\n  }\n\n  let messagesElems =\n    messages.map(m => {\n      if (m.userid == 'me') {\n        return (<div key={m.key} className={classes.myMessage}><Message avatar={m.image} text={m.message} /></div>)\n      }\n      else {\n        return (<div key={m.key} className={classes.message}><Message avatar={m.image} text={m.message} /></div>)\n      }\n    })\n\n  var dialogsElems =\n    dialogs.map(d => (<DialogItem key={d.id} avatar={d.image} id={d.id} name={d.name} path={'/dialogs/' + d.id} />))\n\n\n    return (\n      <div className={classes.dialogs}>\n        <div className={classes.dialogsItems}>\n          {dialogsElems}\n        </div>\n        <div className={classes.messages}>\n          <div>Name</div>\n          {messagesElems}\n          <form onSubmit={handleSubmit(onAddMessage)}>\n            <input type='text' {...register('message')}/>\n            <input type='submit'/>\n          </form>\n        </div>\n      </div>\n  \n    )\n}\n\nexport default Dialogs"],"names":["props","className","classes","src","avatar","text","to","path","name","dispatch","useDispatch","useForm","register","handleSubmit","reset","messages","useSelector","state","dialogsPage","dialogs","messagesElems","newMessageValue","map","m","userid","image","message","key","dialogsElems","d","id","onSubmit","value","addMessageActionCreator","type"],"sourceRoot":""}