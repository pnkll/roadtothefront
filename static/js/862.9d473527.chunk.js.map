{"version":3,"file":"static/js/862.9d473527.chunk.js","mappings":"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","sources":["webpack://study_project/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.jsx","redux/async/usersThunk.js","webpack://study_project/./src/components/Users/Users.module.css?b9d0","components/Users/User.jsx","components/Users/Users.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"selectedPage\":\"Paginator_selectedPage__CRNLp\",\"page\":\"Paginator_page__FNDKJ\",\"btns\":\"Paginator_btns__AgqWW\"};","import { useState } from \"react\"\nimport { useDispatch } from \"react-redux\"\nimport { onSetPageThunk } from \"../../../redux/async/usersThunk\"\nimport Preloader from \"../Preloader/Preloader\"\nimport classes from './Paginator.module.css'\n\nconst Paginator = ({ isFetching, pageSize, currentPage, totalItemsCount, portionSize }) => {\n\n    const dispatch = useDispatch()\n    const pages = []\n\n    const pagesCount = Math.ceil(totalItemsCount / pageSize) //Всего страниц\n    const portionCount = Math.ceil(pagesCount / portionSize) // Всего порций(вкладок)\n    const [portionNumber, setState] = useState(1)\n    const firstPortionItem = (portionNumber - 1) * portionSize + 1 //Номер первого элемента в порции\n    const lastPortionItem = portionNumber * portionSize //Номер последнего элемента в порции\n\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    const portionPages = pages.filter(p => (p >= firstPortionItem) && (p <= lastPortionItem)) //Какие элементы попадают в порцию\n\n    return (\n        <div className={classes.btns}>\n            <div>{isFetching ? <Preloader /> : null}</div>\n            {portionNumber > 1\n                && <button onClick={() => setState(portionNumber - 1)}>Down</button>}\n            {portionPages.map(p => {\n                return <span key={p} onClick=\n                    {(e) => { dispatch(onSetPageThunk(p, pageSize)) }} className={currentPage === p\n                        ? classes.selectedPage\n                        : classes.page}>{p}</span>\n            })}\n            {portionNumber < portionCount\n                && <button onClick={() => setState(portionNumber + 1)} name='next'>Next</button>}\n\n        </div>\n    )\n}\n\nexport default Paginator","import { getUsers, sub, unSub } from \"../../components/api/api\";\nimport { toogleIsFetching, setUsers, setPage, follow, unfollow, toogleOfButton } from \"../usersReducer\";\n\n\n\nexport const getUsersThunk = (currentPage, pageSize) => (dispatch) => {\n    toogleIsFetching(true);\n    getUsers(currentPage, pageSize)\n        .then(response => {\n            dispatch(setUsers(response.data.items))\n            dispatch(toogleIsFetching(false))\n        })\n}\n\nexport const onSetPageThunk = (pageNum, pageSize) => (dispatch) => {\n    dispatch(setPage(pageNum))\n    dispatch(toogleIsFetching(true))\n    getUsers(pageNum, pageSize)\n        .then(response => {\n            dispatch(setUsers(response.data.items))\n            dispatch(toogleIsFetching(false))\n        })\n}\n\nexport const followThunk = (userId) => (dispatch) => {\n    sub(userId).then(response => {\n        if (response.data.resultCode == 0) {\n            dispatch(follow(userId))\n        }\n        dispatch(toogleOfButton(false))\n    })\n}\n\nexport const unFollowThunk = (userId) => (dispatch) => {\n    unSub(userId)\n        .then(response => {\n            if (response.data.resultCode == 0) {\n                dispatch(unfollow(userId))\n            }\n        })\n}","// extracted by mini-css-extract-plugin\nexport default {\"mainWrapper\":\"Users_mainWrapper__xjALJ\",\"users\":\"Users_users__oN5Ju\",\"user\":\"Users_user__ureKU\",\"info\":\"Users_info__QJnqb\",\"name\":\"Users_name__85yu-\",\"btns\":\"Users_btns__G6KPD\",\"followed\":\"Users_followed__qJp4Y\"};","import React from 'react'\nimport classes from './Users.module.css'\nimport { NavLink } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { unFollowThunk } from '../../redux/async/usersThunk'\nimport { followThunk } from '../../redux/async/usersThunk'\n\nconst User = ({id, photos, followed, status, name }) =>{\n\n    const dispatch = useDispatch()\n\n    return <>\n        <div key={id} className={classes.users}>\n                    <div className={classes.user}>\n                        <NavLink to={`../profile/${id}`}><img src={photos.small != null\n                            ? photos.small\n                            : \"https://cdn1.ozone.ru/s3/multimedia-a/c1200/6064056070.jpg\"} /></NavLink><br />\n                        <div>\n                            {followed\n                                ? <button className={classes.followed} onClick={() => {\n                                    dispatch(unFollowThunk(id))\n\n                                }}>unfollow</button>\n                                : <button className={classes.followed} onClick={() => {\n                                    dispatch(followThunk(id))\n                                }}>follow</button>}\n                        </div>\n                    </div>\n\n                    <div className={classes.info}>\n                        <div className={classes.name}>\n                            <div>{name}</div>\n                            <div>{status != null\n                                ? status\n                                : 'Here need a status'}</div>\n                        </div>\n                        <div className={classes.location}>\n                            <div>{\"Atlantic ocean\"}</div>\n                            <div>{\"Bikini Bottom\"}</div>\n                        </div>\n                    </div>\n                </div>\n    </>\n}\n\nexport default User","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Paginator from \"../common/Paginator/Paginator\";\nimport { getUsersThunk } from \"../../redux/async/usersThunk\";\nimport { getCurrentPage, getFetching, getTotalUsersCount, getPageSize, getUsers } from \"../../redux/selectors/users-selectors\";\nimport User from './User'\nimport classes from './Users.module.css'\nimport { Outlet } from \"react-router-dom\";\n\nlet Users = (props) => {\n\n    const dispatch = useDispatch()\n    const totalUsersCount = useSelector(getTotalUsersCount)\n    const pageSize = useSelector(getPageSize)\n    const currentPage = useSelector(getCurrentPage)\n    const users = useSelector(getUsers)\n    const isFetching = useSelector(getFetching)\n\n    useEffect(() => {\n        if (users.length === 0) {\n            dispatch(getUsersThunk(currentPage, pageSize))\n        }\n    }, [])\n\n    return (\n\n        <div className={classes.mainWrapper}>Users {\n            users.map(u => <User key={u.id} id={u.id} photos={u.photos} followed={u.followed} status={u.status} name={u.name} />\n            )\n\n        }\n            <Paginator\n                isFetching={isFetching}\n                pageSize={pageSize}\n                totalItemsCount={totalUsersCount}\n                currentPage={currentPage}\n                portionSize={5} />\n        </div>\n    )\n}\n\nexport default Users"],"names":["isFetching","pageSize","currentPage","totalItemsCount","portionSize","dispatch","useDispatch","pages","pagesCount","Math","ceil","portionCount","useState","portionNumber","setState","firstPortionItem","lastPortionItem","i","push","portionPages","filter","p","className","classes","Preloader","onClick","map","e","pageNum","setPage","toogleIsFetching","getUsers","then","response","setUsers","data","items","onSetPageThunk","name","id","photos","followed","status","to","src","small","userId","unSub","resultCode","unfollow","sub","follow","toogleOfButton","props","totalUsersCount","useSelector","getTotalUsersCount","getPageSize","getCurrentPage","users","getFetching","useEffect","length","getUsersThunk","u"],"sourceRoot":""}